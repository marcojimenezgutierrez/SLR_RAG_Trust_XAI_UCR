# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WN1a3RzHG0pJc8v10h2kSLD67jy2cyjk
"""



"""# Task
Create a Python code that downloads the webpage "https://ieeexplore.ieee.org/abstract/document/10701612", processes the downloaded content with Gemini to extract the abstract, and displays the extracted abstract. Provide the code in the cell with id "zGBNQgYrDitr".

## Install necessary libraries

### Subtask:
Install libraries for web scraping and using the Gemini API.

**Reasoning**:
The subtask is to install the necessary libraries for web scraping and using the Gemini API. I will use pip to install `requests` and `google-generativeai`.
"""

# Commented out IPython magic to ensure Python compatibility.
# %pip install requests google-generativeai

"""## Download the webpage

### Subtask:
Write code to download the content of the specified URL.

**Reasoning**:
The subtask requires downloading the content of the specified URL, which can be done using the `requests` library.
"""

url = "https://ieeexplore.ieee.org/abstract/document/10701612"
response = requests.get(url)
html_content = response.text

"""**Reasoning**:
The previous command failed because the `requests` library was not imported. This command will import the `requests` library and then download the content from the URL.


"""

import requests

url = "https://ieeexplore.ieee.org/abstract/document/10701612"
response = requests.get(url)
html_content = response.text

"""## Extract abstract using gemini

### Subtask:
Use the Gemini API to process the downloaded content and extract the abstract.

**Reasoning**:
Configure the Gemini API, create a prompt with the downloaded HTML content, and use the Gemini model to extract the abstract.
"""

import google.generativeai as genai
import os

# Configure the Gemini API with your API key
# Replace "YOUR_API_KEY" with your actual API key
genai.configure(api_key="AIzaSyCq1v5JP63k4hhL72abPI5WcnW7EocH27g")

# Create a prompt for the Gemini model
prompt = f"""Extract the abstract from the following HTML content:

{html_content}

Abstract:
"""

# Use the Gemini model to generate a response
model = genai.GenerativeModel('gemini-2.5-pro')
response = model.generate_content(prompt)

# Extract the abstract text from the Gemini model's response
abstract = response.text

# Display the extracted abstract
print("Extracted Abstract:")
print(abstract)